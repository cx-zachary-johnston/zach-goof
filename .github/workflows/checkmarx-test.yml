name: Checkmarx SAST on PR

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ master ]

jobs:
  cx-sast:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      security-events: write   # for SARIF upload

    steps:
      - name: Checkout (PR merge preview)
        uses: actions/checkout@v4
        # on pull_request, this checks out refs/pull/<n>/merge by default

      - name: Checkmarx SAST
        id: cx
        uses: Checkmarx/ast-github-action@2.3.27
        with:
          # Auth / tenant
          base_uri:         ${{ secrets.CHECKMARX_BASE_URI }}
          cx_tenant:        ${{ secrets.CHECKMARX_TENANT }}
          cx_client_id:     ${{ secrets.CHECKMARX_CLIENT_ID }}
          cx_client_secret: ${{ secrets.CHECKMARX_CLIENT_SECRET }}

          # Decorate PR (status/comment)
          github_token:     ${{ secrets.GITHUB_TOKEN }}

          # Single consistent project; branch = PR branch
          project_name: "zach-goof"
          branch:       "${{ github.head_ref }}"
          source_dir:   "."

          # Run SAST; produce SARIF; fail on new High/Critical
          args: >
            scan create
            --scan-types sast
            --sast-incremental
            -s .
            --report-format sarif,summaryConsole
            --output-path .
            --output-name checkmarx
            --threshold "sast-high=1;sast-critical=1"
            --async false

      - name: Upload SARIF to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ./checkmarx.sarif
          category: checkmarx-sast

      - name: PR summary
        if: always()
        run: |
          echo "### âœ… Checkmarx SAST finished" >> $GITHUB_STEP_SUMMARY
          echo "- Project: zach-goof" >> $GITHUB_STEP_SUMMARY
          echo "- Branch:  ${{ github.head_ref }}" >> $GITHUB_STEP_SUMMARY
